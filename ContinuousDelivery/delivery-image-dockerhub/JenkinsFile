pipeline {
    agent any

    environment {
		DOCKERHUB_CREDENTIALS=credentials('Devops_MasterClass_DockerHub')
	}

    stages {
        stage('Build Docker Image') {
            steps {
                dir("Containers/simple-flask-app") {
                    sh 'docker build -t simple-flask-app:latest .'
                }
            }
        }
        stage('Prepare Environement') {
            steps
            {
                script {
                    containerName = sh(returnStdout: true, script: "docker ps -a -f 'name=test-container' --format '{{.Names}}'").trim()
                    if(containerName == "test-container")
                    {
                        sh 'docker rm test-container --force'
                        sh "echo 'Nettoyage environnement OK'"
                    }
                    else
                    {
                        sh "echo 'Ennvironnement OK'"
                    }
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                sh 'docker run -d -p 8090:8080 --name test-container kalidousy/simple-flask-app:latest'
                sh 'sleep 15s'
            }
        }
        stage('Test Docker Container') {
            steps {
               sh 'curl http://localhost:8090'
            }
        }

        stage('Clean Environment') {
            steps {
                sh 'docker stop test-container'
                sh 'docker rm test-container'
            }
        }

        stage('Login on DockerHub') {
			steps {
				sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'
			}
		}

		stage('Image Delivery') {

			steps {
				sh 'docker push kalidousy/simple-flask-app:latest
                '
			}
		}
    }
}
