pipeline {
    agent any

    stages {
        stage('Build Docker Image') {
            steps {
                dir("Containers/simple-flask-app") {
                    sh 'docker build -t simple-flask-app:latest .'
                }
            }
        }
        stage('Prepare Environement') {
            container_name = sh (
                script: 'docker ps -a -f \'name=^test-container$\' --format \'{{.Names}}\'',
                returnStdout: true
            ).trim()
            when (container_name == 'test-container')
            steps {
                sh 'docker rm test-container --force'
            }
        }

        stage('Run Docker Container') {
            steps {
                sh 'docker run -d -p 8090:8080 --name test-container simple-flask-app:latest'
                sh 'docker wait test-container'
            }
        }
        stage('Test Docker Container') {
            steps {
               sh 'curl http://localhost:8090'
            }
        }

        stage('Clean Environment') {
            steps {
                sh 'docker stop test-container'
                sh 'docker rm test-container'
            }
        }
    }
}